@model aplication20_07_2019.Models.MarcheViewModel


@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layoutresponsablemarche.cshtml";
}



@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div id="myform" class="form-horizontal">


        <!--<input type="button" onclick="$('#myform').validate().form(); " value="check" />-->
        <hr />
        <h4 onclick="alterer_affichage(1);">Information Marche</h4>
        <div id="information_marche" style="display:none;">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group">
                @Html.LabelFor(model => model.matricule, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.matricule, new { htmlAttributes = new { @class = "form-control", @Id = "matricule" } })
                    @Html.ValidationMessageFor(model => model.matricule, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.budget_prevu, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.budget_prevu, new { htmlAttributes = new { @class = "form-control", @Id = "budget_prevu" } })
                    @Html.ValidationMessageFor(model => model.budget_prevu, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.date_fin, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.date_fin, new { htmlAttributes = new { @class = "form-control", @Id = "date_fin", Type = "date" } })

                    @Html.ValidationMessageFor(model => model.date_fin, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Délai, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Délai, new { htmlAttributes = new { @class = "form-control", @Id = "Délai" } })
                    en Jours Depuis la création du marche
                    @Html.ValidationMessageFor(model => model.Délai, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <hr />
        <h4 onclick="alterer_affichage(2);">Ajouter Projet </h4>

        @Html.ValidationMessageFor(model => model.id_projet, "", new { @class = "text-danger" })
        <div id="ajouter_projet" style="display:none;">
            <div id="zone_projet" class="text-center" style="display:none">
                <h5> le projet que vous avez selectionner : </h5>

                <h5 id="texte_selctionne" style="color:orange"></h5>
            </div>
            <table class="table table-striped table-bordered" id="table_project">
                <tr>

                    <th>
                        Date_debut
                    </th>
                    <th>
                        Libelle projet
                    </th>
                    <th>
                        Cout total
                    </th>

                </tr>

                @foreach (var item in ViewBag.listeProjet)
                {
                    <tr>



                        <td>
                            @item.date_debut
                        </td>
                        <td>
                            @item.libelle_projet
                        </td>
                        <td>
                            @item.cout_total
                        </td>
                        <td style="display:none;">
                            @item.id_projet
                        </td>


                    </tr>
                }

            </table>

        </div>
        <hr />
        <h4 onclick="alterer_affichage(3);">Ajouter des prestataire</h4>
        @Html.EditorFor(model => model.listeprestataire, new { htmlAttributes = new { @class = "form-control", @Id = "matricule" } })
        @Html.ValidationMessageFor(model => model.listeprestataire, "", new { @class = "text-danger" })
        <div id="ajouter_prestataire" style="display:none;">
            <table class="table ">
                <tr>
                    <th></th>
                    <th>
                        id_prestataire
                    </th>

                    <th>
                        raison_social
                    </th>
                    <th>
                        Participer?
                    </th>


                </tr>

                @foreach (var item in ViewBag.listeprestataire)
                {
                    <tr>
                        <td>
                            @if (item.image_prestataire != null)
                            {
                                <img src="@String.Format("data:image/png;base64,{0}",Convert.ToBase64String(item.image_prestataire))" width="150" height="50" />
                            }
                        </td>

                        <td>
                            @item.libelle
                        </td>
                        <td>
                            @item.raison_social
                        </td>
                        <td>
                            <input type="checkbox" class="checkbox" name="listeprestataire" value="@item.id_prestataire" id="listeprestataire" />
                        </td>

                    </tr>
                }

            </table>
        </div>
        <hr />
        <h4 onclick="alterer_affichage(4);">Ajouter des Missions</h4>
        @Html.EditorFor(model => model.listeprestataire, new { htmlAttributes = new { @class = "form-control", @Id = "matricule" } })
        @Html.ValidationMessageFor(model => model.listMission, "", new { @class = "text-danger" })
        <div id="ajouter_mission" style="display:none;">
            <div class=" row">
                <div class="col-md-6">
                    <form class="form-control form-horizontal ">
                        <div class="form-group">
                            <label for="profils" class="col-sm-4 control-label">Domaine:</label>
                            <div class=" col-sm-8">
                                @Html.DropDownList("libelle_domaine", ViewBag.listedomaines as SelectList, "ajoute un domaine", new { @class = "form-control", @Id = "domaine" })

                            </div>
                        </div>
                        <!--<div class="form-group">
                        <label for="date_debut_mission" class="col-sm-4 control-label">Date de debut:</label>
                        <div class="col-sm-8">
                            <input type="date" class="form-control" id="date_debut_mission"
                                   placeholder="Enter date de debut de la mission">
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="firstname" class="col-sm-4 control-label">Date de fin :</label>
                        <div class="col-sm-8">
                            <input type="date" class="form-control" id="date_fin_mission"
                                   placeholder="Enter la date de fin">
                        </div>
                    </div>

                    <div class="form-group">
                        <label for="charge" class="col-sm-4 control-label">Charge:</label>
                        <div class="col-sm-8">
                            <input type="text" class="form-control" id="charge"
                                   placeholder="Enter la charge">
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="cout" class="col-sm-4 control-label">Cout:</label>
                        <div class="col-sm-8">
                            <input type="number" class="form-control" id="cout"
                                   placeholder="Enter le cout">
                        </div>
                    </div>-->
                        <div class="form-group">
                            <label for="Libelle_mission" class="col-sm-4 control-label">Libelle de la mission:</label>
                            <div class="col-sm-8">
                                <input type="text" class="form-control" id="Libelle_mission"
                                       placeholder="Enter le Libelle">
                            </div>
                        </div>
                        <div class="form-group">
                            <label for="profils" class="col-sm-4 control-label">Les Profils:</label>
                            <div class=" col-sm-8">
                                @Html.DropDownList("libelle_profil", ViewBag.listeProfils as SelectList, "ajoute un profils", new { @class = "form-control", @Id = "liste_profils", @onChange = " document.getElementById('nombre_charge').style.display = 'block'" })
                                <div style="text-decoration:underline" onclick="$('#ajouter').modal('show');"> ajouter un nouveaux profil</div>

                            </div>
                        </div>
                        <div class="form-group" style="display:none;" id="nombre_charge">
                            <label for="profils" class="col-sm-6 control-label">la charge:</label>
                            <div class=" col-sm-4">
                                <input type="number" class="form-control" id="charge_nombre"
                                       placeholder="la charge ">
                                <a onclick="ajouter_profils()" class="btn btn-info "> <i class="glyphicon glyphicon-ok"></i></a>

                            </div>
                        </div>


                        <div class="col-sm-12">
                            <input type="button" value="ajouter" onclick="addButton()" class="btn btn-default" />
                        </div>
                    </form>
                </div>
                <div class=" col-md-6" style="display:none;" id="profils_selectione">
                    <h4> les profils selectionné :</h4>
                    <table class="table " id="table_profils">
                        <thead>

                        <th>Suprimer</th>

                        <th>
                            Libelle profil
                        </th>
                        <th>
                            charge profil
                        </th>

                        </thead>
                        <tbody></tbody>
                    </table>

                </div>


                <table class="table col-md-12 " id="table_mission" style="display:none">
                    <thead>

                    <th></th>
                    <th>
                        Domaine
                    </th>
                    <th>
                        Libelle mission
                    </th>
                    <th>
                        Profils
                    </th>
                    <th>
                        Charge profil
                    </th>



                    </thead>
                    <tbody></tbody>
                </table>
            </div>

        </div>
        <hr />

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="text" name="id_project" id="id_project" style="display:none;" />
                <input type="button" value="Create" onclick="btnSave()" class="btn btn-default" />
            </div>
        </div>


    </div>
    <div class="modal fade " id="ajouter">
        <form class="form" method="post" action="/Project/ajouter_profils">

            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <a href="#" class="close" data-dismiss="modal">&times;</a>
                        <h3 class="modal-title"> Entrer le liblle du profil</h3>
                        
                    </div>
                    <div class="modal-body">
                        <label class=" text-info ">libelle:</label> 
                    <input type="text" name="liblle_profil" class="form-control"/>

                    </div>
                    <div class="modal-footer right">
                        <a href="#" class="btn btn-default" data-dismiss="modal">Cancel</a>
                        <button class="btn btn-default"type="submit">Confimer</button>
                       
                    </div>





                </div>

            </div>


        </form>
    </div>

}


<script type="text/javascript">

    function alterer_affichage(a) {
        switch (a) {
            case 1:
                document.getElementById("information_marche").style.display = "block";
                document.getElementById("ajouter_projet").style.display = "none";
                document.getElementById("ajouter_prestataire").style.display = "none";
                document.getElementById("ajouter_mission").style.display = "none";

                break;
            case 2:
                document.getElementById("information_marche").style.display = "none";
                document.getElementById("ajouter_projet").style.display = "block";
                document.getElementById("ajouter_prestataire").style.display = "none";
                document.getElementById("ajouter_mission").style.display = "none";
                break;
            case 3:
                document.getElementById("information_marche").style.display = "none";
                document.getElementById("ajouter_projet").style.display = "none";
                document.getElementById("ajouter_prestataire").style.display = "block";
                document.getElementById("ajouter_mission").style.display = "none";
                break;
            case 4:
                document.getElementById("information_marche").style.display = "none";
                document.getElementById("ajouter_projet").style.display = "none";
                document.getElementById("ajouter_prestataire").style.display = "none";
                document.getElementById("ajouter_mission").style.display = "block";
                break;
        }
    }

    var table = document.getElementById("table_project");
    if (table != null) {

        for (var i = 0; i < table.rows.length; i++) {
            table.rows[i].onclick = function () { tableText(this); };

        }
    }

    function tableText(tableRow) {


        document.getElementById("id_project").value = tableRow.cells[3].textContent;
        document.getElementById("texte_selctionne").innerHTML = tableRow.cells[1].textContent;
        document.getElementById("zone_projet").style.display = "block";
    }
    var profils = new Array();

    function ajouter_profils() {

        var e = document.getElementById("liste_profils");
        var libele = e.options[e.selectedIndex].text;
        //affichage

        if (!(profils.includes(libele) || libele == 'ajoute un profils')) {
            document.getElementById("profils_selectione").style.display = "block";

            profils.push(libele);
            var libelle_profil = libele
            var tBody = $("#table_profils > TBODY")[0];
            var row = tBody.insertRow(-1);
            cell = $(row.insertCell(-1));

            var btnRemove = $("<input />");
            btnRemove.attr("type", "button");
            btnRemove.attr("onclick", "Remove_profil(this);");
            btnRemove.val("Suprimer");
            btnRemove.attr("class", "btn btn-default ");
            cell.append(btnRemove);
            var cell = $(row.insertCell(-1));
            cell.html(libelle_profil);
            //ajout d'une inpute cherger profil

            cell = $(row.insertCell(-1));
            cell.html(document.getElementById("charge_nombre").value);
            document.getElementById("charge_nombre").value = "";
            document.getElementById("nombre_charge").style.display = "none";
        }
        else
            alert("profil déja selctione");
        //
    }



    function addButton() {
        profils = [];

        var Libelle = $("#Libelle_mission");
        var colone_tableaux = $("#table_profils");
        var domaine = $("#domaine");
        //Get the reference of the Table's TBODY element.
        var tBody = $("#table_mission > TBODY")[0];
        document.getElementById("table_mission").style.display = "block";
        //Add Row.

        var row = tBody.insertRow(-1);

        //Add Button cell.

        cell = $(row.insertCell(-1));
        var btnRemove = $("<input />");
        btnRemove.attr("type", "button");
        btnRemove.attr("onclick", "Remove_mission(this);");
        btnRemove.val("Suprimer");
        btnRemove.attr("class", "btn btn-default ");
        cell.append(btnRemove);

        var cell = $(row.insertCell(-1));
        cell.html(domaine.val());

        cell = $(row.insertCell(-1));
        cell.html(Libelle.val());
        cell = $(row.insertCell(-1));
        var caseprofils = Array();
        var casecharge = Array();
        var chargepro;
        $('#table_profils > TBODY  > tr ').each(function () {
            var row = $(this);
            libele = row.find("TD").eq(1).html();
            // caseprofils.push(libele);
            caseprofils.push("<li>" + libele + "</li>");
            chargepro = row.find("TD").eq(2).html();
            casecharge.push("<li>" + chargepro + "</li>");
        });

        for (var i = table_profils.rows.length - 1; i > 0; i--) {
            table_profils.deleteRow(i);
        }
        document.getElementById("profils_selectione").style.display = "none";
        cell.html(caseprofils);
        cell = $(row.insertCell(-1));
        cell.html(casecharge);
        //Clear the TextBoxes.
        Libelle.val("");

    }
    function Remove_mission(button) {
        //Determine the reference of the Row using the Button.
        var row = $(button).closest("TR");
        var name = $("TD", row).eq(2).html();
        if (confirm("Vous voullez suprimer la mission nomé: " + name)) {
            //Get the reference of the Table.
            var table = $("#table_mission")[0];

            //Delete the Table row using it's Index.
            table.deleteRow(row[0].rowIndex);
        }
    };
    function Remove_profil(button) {
        //Determine the reference of the Row using the Button.
        var row = $(button).closest("TR");
        var name = $("TD", row).eq(1).html();
        if (confirm("Vous voullez suprimer le profils nomé: " + name + ".  dans votre selctione")) {
            //Get the reference of the Table.
            var table = $("#table_profils")[0];

            //Delete the Table row using it's Index.
            table.deleteRow(row[0].rowIndex);
        }
    };

    function btnSave() {
        var form = $("#myform");
        
        if (true) {
            var Marche = new Object();
            Marche.matricule = $("#matricule").val();
            Marche.budget_prevu = $("#budget_prevu").val();
            Marche.date_fin = $("#date_fin").val();
            Marche.Délai = $("#Délai").val();
            Marche.listeprestataire = new Array();
            var alpha = new Array();
            $('#listeprestataire ').each(function () {
                alpha.push($(this).val());
            });
            Marche.listeprestataire = alpha;

            //  Marche.listeprestataire = $("#listeprestataire").val();
            Marche.id_projet = $("#id_project").val();

            listMission = new Array();

            $('#table_mission > TBODY  > tr ').each(function () {


                var row = $(this);

                var mission = new Object();
                mission.domaine = row.find("TD").eq(1).html();
                mission.libelle_mission = row.find("TD").eq(2).html();


                // remplissage de profils dans le requet ajax



                var profilschargee = new Array();
                var i = 0;
                var profil = row.find("TD").eq(3).find("li").eq(i).html();
                var charge;
                while (profil != undefined) {
                    profil = row.find("TD").eq(3).find("li").eq(i).html()
                    charge = row.find("TD").eq(4).find("li").eq(i).html()
                    if (profil != undefined) {
                        var element = new Object();
                        element.libelle = profil;
                        element.charge = charge;
                        profilschargee.push(element);
                    }

                    i++;
                }

                mission.listeprofils = profilschargee;

                listMission.push(mission);
            });
            Marche.listMission = listMission;
            //Send the JSON array to Controller using AJAX.

            if ($('#table_mission >tbody >tr').length >= 1) {
                $.ajax({


                    url: "/Marche/Create",
                    type: "post",
                    dataType: "json",
                    contentType: "application/json",

                    data: JSON.stringify(Marche),
                    success: function (r) {
                        alert(r + " record(s) inserted.");
                    }
                });
                alert("vous avez ajouter un nouveau marche");
            }
            else { // acun mission n'est dans le  marche
                alert("ajouter un mission au moin");
            }
        }
        else {
            alert("vous devez remplir tous les champs");
        }
    }

</script>